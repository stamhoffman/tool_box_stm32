cmake_minimum_required(VERSION 3.5.1)

include(STM32F1xx.cmake)
project(tool_box_stm32)
add_definitions(-DSTM32F10X_MD)

file(GLOB_RECURSE USER_SOURSE "stm_lib/src/*.c main.c")
file(GLOB_RECURSE STARTUP_SOURSE "cmsis_boot/startup/*.c")
file(GLOB_RECURSE SYS_SOURSE "cmsis_boot/*.c")

add_library(CMSIS cmsis_boot/system_stm32f10x.c cmsis_boot/startup/startup_stm32f10x_md.c)

include_directories(stm_lib/inc)
include_directories(cmsis_boot)
include_directories(cmsis)
include_directories(cmsis_boot/startup/stm32f10x.h)

SET(STARTUP_TARGET startup_stm32f10x_md)
SET(SYS_TARGET system_stm32f10x)
SET(RCC_TARGET stm32f10x_rcc)
SET(GPIO_TARGET stm32f10x_gpio)
SET(PACKDATA_TARGET pack_data)

SET(SOURCE_FILE_STARTUP cmsis-boot/startup_stm32f10x.c)
SET(SOURCE_FILE_SYS cmsis-boot/system_stm32f10x.c)
SET(SOURCE_FILE_GPIO stm_lib/src/stm32f10x_gpio.c)
SET(SOURCE_FILE_RCC stm_lib/src/stm32f10x_rcc.c)
SET(SOURCE_FILE_PACKDATA stm_lib/pack_data.c)

add_executable(${PROJECT_NAME}.elf ${USER_SOURSE} ${STARTUP_SOURSE} ${SYS_SOURSE})
target_link_libraries(${PROJECT_NAME}.elf CMSIS)

set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -mcpu=cortex-m3 -mthumb -g2 -Wl, -Map=${PROJECT_SOURCE_DIR}/build/${PROJECT_NAME}.map -O0 -Wl,
--gc-sections ${PROJECT_SOURCE_DIR}/arm-gcc-link.ld -g -o")

set(HEX_FILE ${PROJECT_SOURCE_DIR}/build/${PROJECT_NAME}.hex)
set(BIN_FILE ${PROJECT_SOURCE_DIR}/build/${PROJECT_NAME}.bin)

add_custom_command(TARGET ${PROJECT_NAME}.elf
POST_BUILD
          COMMAND ${CMAKE_OBJCOPY} -Oihex $<TARGET_FILE:${PROJECT_NAME}.elf> ${HEX_FILE}
          COMMAND ${CMAKE_OBJCOPY} -Obinaty <$TARGET_FILE:${PROJECT_NAME}.elf> ${BIN_FILE}
          COMMENT "BUILD ${HEX_FILE} \n BUILDding ${BIN_FILE}")
